name: Docker Build and Push Beta

on:
    push:
        branches:
            - "master"
    workflow_dispatch: {}

permissions:
    packages: write

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: realashleybailey/wizarr-memberserver
    IMAGE_TAG: latest

jobs:
    clear:
        runs-on: ubuntu-latest
        steps:
            # Clear the digests from the artifacts
            - name: Clear digests
              uses: geekyeggo/delete-artifact@v2
              with:
                  name: |
                      digests_dh
                      digests_ghcr

    build_ghcr:
        name: Build Digest for GHCR
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                platform:
                    - linux/amd64

        steps:
            # Checkout the repo
            - name: Checkout
              uses: actions/checkout@v4

            # Get the Metadata from the Docker Image
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            # Set up QEMU
            # - name: Set up QEMU
            #   uses: docker/setup-qemu-action@v3
            #   with:
            #     platforms: ${{ matrix.platform }}

            # Set up Docker Buildx
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # Login to GHCR
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # Build and push the image
            - name: Build and push by digest
              id: build
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  platforms: ${{ matrix.platform }}
                  labels: ${{ steps.meta.outputs.labels }}
                  provenance: false
                  outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true
                  cache-from: type=gha,scope=${{ matrix.platform }}-${{ env.REGISTRY }}
                  cache-to: type=gha,mode=max,scope=${{ matrix.platform }}-${{ env.REGISTRY }}

            # Export the digest for later use
            - name: Export digest
              run: |
                  mkdir -p /tmp/digests
                  digest="${{ steps.build.outputs.digest }}"
                  touch "/tmp/digests/${digest#sha256:}"

            # Upload the digest as an artifact
            - name: Upload digest
              uses: actions/upload-artifact@v3
              with:
                  name: digests_ghcr
                  path: /tmp/digests/*
                  if-no-files-found: error
                  retention-days: 1

    merge_ghcr:
        name: Merge Digest for GHCR
        runs-on: ubuntu-latest
        needs:
            - build_ghcr
        steps:
            # Checkout the repo
            - name: Checkout
              uses: actions/checkout@v2

            # Get the Release Version from latest
            - name: Get the Release Version from latest
              id: get_version
              run: echo "::set-output name=version::$(cat latest)"

            # Download the digests from the artifacts
            - name: Download digests
              uses: actions/download-artifact@v3
              with:
                  name: digests_ghcr
                  path: /tmp/digests

            # Set up Docker Buildx
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # Get the Metadata from the Docker Image
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            # Login to GHCR
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # Create manifest list and push
            - name: Create manifest list and push to Registry
              working-directory: /tmp/digests
              run: |
                  docker buildx imagetools create \
                    --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
                    $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)

            # Inspect image
            - name: Inspect image
              run: docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
